{"version":3,"sources":["component/header/index.js","component/footer/index.js","store/categories.js","component/categories/categories.js","store/cart.js","store/products.js","component/products/products.js","component/simpleCart/index.js","component/products/details.js","component/simpleCart/checkout.js","App.js","store/index.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","purple","secondary","useStyles","makeStyles","root","flexGrow","title","Header","classes","ThemeProvider","AppBar","position","Toolbar","to","Link","color","component","underline","Typography","variant","className","Footer","initalState","categories","active","mapDispatchToProps","updateActive","name","type","payload","getCategories","dispatch","superagent","get","then","data","updateCategoriesState","body","connect","state","props","useEffect","activeIndex","forEach","ele","i","Paper","square","Tabs","value","indicatorColor","textColor","centered","map","Tab","label","onClick","cart","url","updateRemoteData","product","console","log","inventoryCount","_id","DBproduct","put","send","updateCart","products","listOnActive","getAction","padding","bullet","display","margin","transform","fontSize","pos","marginBottom","Products","getState","Grid","container","spacing","item","xs","Card","CardContent","gutterBottom","category","price","description","CardActions","Button","size","pathname","Cart","delItem","id","items","length","e","target","parentNode","filter","window","location","split","discrption","allItems","total","reduce","currentValue","parseInt","checkoutDetails","onSubmit","preventDefault","alert","checkout","placeholder","App","exact","path","reducers","combineReducers","action","splice","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad7e9756.chunk.js","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NavLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nimport purple from \"@material-ui/core/colors/purple\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: \"#ffff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink to=\"/\">\n            <Link color=\"textPrimary\" component=\"button\" underline=\"none\">\n              <Typography\n                color=\"secondary\"\n                variant=\"h4\"\n                className={classes.title}\n              >\n                Our Store\n              </Typography>\n            </Link>\n          </NavLink>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\nexport default Header;\n","function Footer() {\n    return(\n        <footer>by Nedal Erekat 2020</footer>\n    )\n}\nexport default Footer;","import superagent from 'superagent'\nlet initalState = {\n  categories: [],\n  active: null,\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case \"updateAction\":\n      return { ...state, active: action.payload };\n    case \"GetCategories\":\n      return { active: action.payload[0], categories: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const updateActive = (name) => {\n  return {\n    type: \"updateAction\",\n    payload: name,\n  };\n};\n\nexport const updateCategoriesState = (categories) => {\n  return {\n    type: \"GetCategories\",\n    payload: categories,\n  };\n};\n//create middleware to get categories from the API\nlet url = \"https://productsandstuff.herokuapp.com/api/v1/categories\";\nexport const getCategories = () => (dispatch) => {\n  return superagent.get(url).then((data) => {\n    dispatch(updateCategoriesState(data.body));\n  });\n};\n// update\n","import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { connect } from \"react-redux\";\nimport { updateActive, getCategories } from \"../../store/categories\";\nfunction Categories(props) {\n  useEffect(() => {\n    props.getCategories();\n  }, []);\n  let activeIndex = 0;\n  props.categories.categories.forEach((ele, i) => {\n    if (props.categories.active === ele.name) activeIndex = i;\n  });\n  return (\n    <Paper square>\n      <Tabs\n        value={activeIndex}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        {props.categories.categories.map((ele, i) => {\n          return (\n            <Tab\n              label={ele.name}\n              key={i}\n              onClick={() => props.updateActive(ele.name)}\n            >\n              {ele.name}\n            </Tab>\n          );\n        })}\n      </Tabs>\n    </Paper>\n  );\n}\nconst mapStateToProps = (state) => ({\n  categories: state.categories,\n});\nconst mapDispatchToProps = { updateActive, getCategories };\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import superagent from \"superagent\";\nlet cart = [];\n\nexport default (state = cart, action) => {\n  switch (action.type) {\n    case \"addToCart\":\n      return [...state, action.payload.product];\n    case \"del\":\n      // should create module for cart\n      // should use superagent to delete from cart database(delete)\n      state.splice(action.payload, 1);\n      console.log(state);\n      return [...state];\n\n    default:\n      return state;\n  }\n};\nlet url = \"https://productsandstuff.herokuapp.com/api/v1/products\";\n\nexport const updateRemoteData = (product, i) => (dispatch) => {\n  // return a fucntion that will call superagent API\n  console.log(\"updateRemoteData : \", product, i);\n  if (product.inventoryCount) {\n    console.log(\n      \"product.inventoryCount before add << \",\n      product.inventoryCount,\n      \" id: \",\n      i\n    );\n    return superagent\n      .get(`${url}/${product._id}`)\n      .then((DBproduct) =>\n        // console.log(' inventoryCount before put ===> ',DBproduct.body[0].inventoryCount)\n        superagent\n          .put(`${url}/${DBproduct.body[0]._id}`)\n          .send({\n            ...DBproduct,\n            inventoryCount: DBproduct.body[0].inventoryCount - 1,\n          })\n      )\n      .then((data) => {\n        // call my action after getting the API response.\n        console.log(\n          \"product.inventoryCount after add >>\",\n          data.body.inventoryCount,\n          \" id: \",\n          i\n        );\n        // dispatch(updateCart({ ...data, inventoryCount: data.body.inventoryCount - 1 },i));\n        dispatch(updateCart(data.body, i));\n      });\n  }\n};\n\nexport const updateCart = (product, i) => {\n  // should use superagent to update cart database module(put)\n  return {\n    type: \"addToCart\",\n    payload: { product, i },\n  };\n};\nexport const delItem = (itemId) => {\n  return {\n    type: \"del\",\n    payload: itemId,\n  };\n};\n\n","// import products from \"../component/products/products\";\nimport superagent from \"superagent\";\n\n// Each product should have a category association, name, description, price, inventory count\nlet initalState = {\n  products: [],\n  listOnActive: [\"choose The categorey you want\"],\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case \"updateAction\":\n      // state = initalState;\n      return {\n        ...state,\n        listOnActive: state.products.filter(\n          (product) => product.category === action.payload\n        ),\n      };\n\n    case \"addToCart\":\n      let { product, id } = action.payload;\n      return {\n        listOnActive: state.listOnActive.map((ele) =>\n        ele._id === product._id ? product : ele\n        ),\n        products: state.products.map((ele) =>\n          ele._id === product._id ? product : ele\n        ),\n      };\n    // add new case to handle get\n    case \"GET\":\n      return { listOnActive:action.payload, products: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nlet url = \"https://productsandstuff.herokuapp.com/api/v1/products\";\n\n// getRemotedata ---> superageny and despatch getAction\nexport const getRemoteData = () => (dispatch) => {\n  // return a fucntion that will call superagent API\n  return superagent.get(url).then((data) => {\n    // call my action after getting the API response.\n    dispatch(getAction(data.body));\n  });\n};\n// getRemotedata ---> superageny and despatch getAction\n\n// getAction ---> send the response to component\n// acton creator function\nconst getAction = (payload) => {\n  return {\n    type: \"GET\",\n    payload: payload,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateRemoteData } from \"../../store/cart\";\nimport { getRemoteData } from \"../../store/products\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    // minWidth: 275,\n    // width: \"25%\",\n    flexGrow: 1,\n    padding: 1,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\nfunction Products(props) {\n  const classes = useStyles();\n  //  1 useEffect(at the loading wich treger get )\n  useEffect(() => {\n    props.get();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          {props.Products.listOnActive.map((ele, i) => {\n            return (\n              <Grid item xs={4} key={i}>\n                <Card className={classes.root} variant=\"outlined\" key={i}>\n                  <CardContent>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      {ele.category}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      {ele.name}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      {ele.price}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {ele.description}\n                      <br />\n                      {'\"a benevolent smile\"'}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => props.updateCart(ele, i)}\n                    >\n                      add to cart\n                    </Button>\n                    <Button>\n                      <Link\n                        to={{\n                          pathname: `/products/${ele._id}`,\n                        }}\n                      >\n                        show more ...\n                      </Link>\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n// state came from the reducer  combineReducers({ products, categories });\nconst mapStateToProps = (state) => ({\n  Products: state.products,\n});\nconst mapDispatchToProps = (dispatch, getState) => ({\n  get: () => dispatch(getRemoteData()),\n  updateCart: (product, i) => dispatch(updateRemoteData(product, i)),\n});\n// 2 add remote function\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { delItem } from \"../../store/cart\";\nimport { NavLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: \"#000\",\n    },\n  },\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  cart: {\n    flexGrow: 1,\n  },\n}));\nfunction SimpleCart(props) {\n  const classes = useStyles();\n\n  let items = props.Cart.length ? (\n    props.Cart.map((item, i) => (\n      <li key={i} id={i}>\n        {item.name}\n        <button onClick={(e) => props.delItem(e.target.parentNode.id)}>\n          X\n        </button>\n      </li>\n    ))\n  ) : (\n    <h3>there is not any item in cart</h3>\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <h3>\n        <NavLink to=\"/cart\">\n          <Link color=\"textPrimary\" component=\"button\" underline=\"none\">\n            <Typography\n              color=\"primary\"\n              variant=\"h6\"\n              className={classes.cart}\n            >\n              ({items.length || 0}) items in Cart\n            </Typography>\n          </Link>\n        </NavLink>\n      </h3>\n      <ul>{items}</ul>\n    </ThemeProvider>\n  );\n}\n// send the state for props\n\nconst mapStateToProps = (state) => ({\n  Cart: state.cart,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    delItem: (id) => dispatch(delItem(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleCart);\n// connect\n","import { connect } from \"react-redux\";\nimport { updateRemoteData } from \"../../store/cart\";\nfunction ProductDetails(props) {\n  let item = props.product.filter((ele) => {\n    return ele._id === window.location.pathname.split(\"/\")[2];\n  });\n  return (\n    <div>\n      <h2>{item[0].name}</h2>\n      <p>{item[0].discrption}</p>\n      <h3>Price: {item[0].price}</h3>\n      <h3>In Stock: {item[0].inventoryCount}</h3>\n      <button onClick={() => props.updateCart(item[0], 1)}>Buy</button>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  product: state.products.products,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateCart: (product, i) => dispatch(updateRemoteData(product, i)),\n});\n// export default ProductDetails\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);\n","import { connect } from \"react-redux\";\nfunction ShoppingCart(props) {\n  const checkout = (e) => {\n    e.preventDefault();\n    alert(\"Thank you for your purchase\");\n  };\n  let total = props.allItems.reduce((total, currentValue) => {\n    return total + parseInt(currentValue.price);\n  }, 0);\n\n  let checkoutDetails = props.allItems.map((item, i) => {\n    return (\n      <tr key={i}>\n        <td>{i}</td>\n        <td>{item.name}</td>\n        <td>{item.price}</td>\n      </tr>\n    );\n  });\n  console.log(total);\n  return (\n    <div>\n      <h1>Order Summary</h1>\n      <table>\n        <tr>\n          <th>num</th>\n          <th>item</th>\n          <th>price</th>\n        </tr>\n        {checkoutDetails}\n        <tr>\n          <td>Total Price</td>\n          <td></td>\n          <td>{total}</td>\n        </tr>\n      </table>\n      <form onSubmit={(e) => checkout(e)}>\n        <section className=\"formOne\">\n          <h2>Billing Address</h2>\n          <input type=\"text\" name=\"name\" placeholder=\"Full Name\" />\n          <br />\n          <input type=\"text\" name=\"address\" placeholder=\"Address\" />\n          <br />\n          <input type=\"text\" name=\"city\" placeholder=\"City\" />\n          <br />\n          <input type=\"text\" name=\"state\" placeholder=\"State\" />\n          <br />\n          <input type=\"text\" name=\"zip\" placeholder=\"Zip\" />\n          <br />\n        </section>\n        <section className=\"formSecond\">\n          <h2>Payment details</h2>\n          <input type=\"text\" name=\"cardNum\" placeholder=\"Credit Card #\" />\n          <br />\n          <input type=\"date\" name=\"date\" />\n          <br />\n          <input type=\"text\" name=\"cvv\" placeholder=\"CVV\" />\n          <br />\n        </section>\n        <button>Checkout</button>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  allItems: state.cart,\n});\nexport default connect(mapStateToProps)(ShoppingCart);\n","import Header from \"./component/header\";\nimport Footer from \"./component/footer\";\nimport Categories from \"./component/categories/categories\";\nimport Products from \"./component/products/products\";\nimport SimpleCart from \"./component/simpleCart/index\";\nimport ProductDetails from \"./component/products/details\";\nimport ShoppingCart from \"./component/simpleCart/checkout\"\nimport { Route, Switch } from \"react-router-dom\";\nfunction App() {\n  return (\n    <>\n      <Header />\n      <SimpleCart />\n      <Switch>\n        <Route exact path=\"/\">\n          <Categories />\n          <Products />\n        </Route>\n        <Route exact path=\"/products/:id\">\n          <ProductDetails />\n        </Route>\n        <Route exact path=\"/cart\">\n        <ShoppingCart />\n        </Route>\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport thunk from \"redux-thunk\";\nimport categories from \"./categories\";\nimport products from \"./products\";\nimport cart from \"./cart\"\nlet reducers = combineReducers({ categories,products,cart });\nconst store = () => createStore(reducers,composeWithDevTools(applyMiddleware(thunk)));\nexport default store();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}